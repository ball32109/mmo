/*
 * main.cpp
 *
 *  Created on: Jan 7, 2015
 *      Author: root
 */



#include <event2/event.h>
#include <event2/thread.h>

#include "GlobalInfo.h"
#include "InetAddr.h"
#include "GateMonitor.h"



void eventCallback(int fd, short which, void *arg)
{
	event_base *base = (event_base*)arg;
	event_base_loopexit(base, NULL);

	printf("stop eventCallback\n");
}

int main()
{
	GlobalInfo::useThreads();

	GlobalInfo::print();

	struct event_base *base = event_base_new();

	event *ev = evsignal_new(base, 2, eventCallback, (void* )base);
	if (!ev || event_add(ev, NULL) < 0)
	{
		event_del(ev);
		return false;
	}

	GATE_MONITOR->init();
	GATE_MONITOR->start();

	event_base_dispatch(base);

	event_base_free(base);

	GATE_MONITOR->stop();
	GATE_MONITOR->final();

	printf("end of server\n");

	return 0;
}
